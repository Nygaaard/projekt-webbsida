{"mappings":"AAAA,eAAe;AACf,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,MAAM,cAAc;IAEpB,IAAI,CAAC,OAAO;QACV,eAAe,OAAO,CACpB,eACA;QAEF,OAAO,QAAQ,CAAC,IAAI,GAAG;QACvB;IACF;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,aAAa;YACxC,QAAQ;YACR,SAAS;gBACP,eAAe,YAAY;YAC7B;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EACd,MAAM,IAAI,MAAM;QAGlB,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,KAAK,OAAO,KAAK,mBACnB,MAAM,IAAI,MAAM;IAGlB,cAAc;IAChB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO,QAAQ,CAAC,IAAI,GAAG;IACzB;AACF","sources":["src/js/admin.js"],"sourcesContent":["//Validate user\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const validateUrl = \"http://localhost:3000/api/protected\";\r\n\r\n  if (!token) {\r\n    sessionStorage.setItem(\r\n      \"failedLogin\",\r\n      \"Du måste logga in för att få tillgång till denna sida.\"\r\n    );\r\n    window.location.href = \"login.html\";\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(validateUrl, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Token är ogiltig\");\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    if (data.message !== \"Protected route\") {\r\n      throw new Error(\"Token är ogiltig\");\r\n    }\r\n\r\n    // Valid token\r\n  } catch (error) {\r\n    console.error(\"Validering av token misslyckades:\", error);\r\n    window.location.href = \"login.html\";\r\n  }\r\n});\r\n"],"names":[],"version":3,"file":"admin.882a59c0.js.map","sourceRoot":"/__parcel_source_root/"}